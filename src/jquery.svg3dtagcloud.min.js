/*
 * @Author: Fawen
 * @Date: 2018-09-10 13:30:17
 * @LastEditors: Fawen
 * @LastEditTime: 2019-11-08 15:59:22
 */
!(function () {
  function t(t, e) {
    var i = {
      entries: [],
      width: 480,
      height: 480,
      radius: "100%",
      radiusMin: 75,
      bgDraw: !0,
      bgColor: "#000",
      opacityOver: 1,
      opacityOut: 0.05,
      opacitySpeed: 6,
      fov: 800,
      speed: 2,
      edege: true,
      fontFamily: "Arial, sans-serif",
      fontSize: "15",
      fontColor: "#fff",
      linkClass: "",
      hover: !1,
      click: !1,
      fontWeight: "normal",
      fontStyle: "normal",
      fontStretch: "normal",
      fontToUpperCase: !1,
      tooltipFontFamily: "Arial, sans-serif",
      tooltipFontSize: "15",
      tooltipFontColor: "#fff",
      tooltipFontWeight: "normal",
      tooltipFontStyle: "normal",
      tooltipFontStretch: "normal",
      tooltipFontToUpperCase: !1,
      tooltipTextAnchor: "left",
      tooltipPosition: "",
      tooltipDiffX: 0,
      tooltipDiffY: 10,
      animatingSpeed: 0.01,
      animatingRadiusLimit: 1.3,
      formatter: function (t) {
        return t.tooltipLabel;
      },
      onClick: function (t, e) {
        console.log(t);
      },
    };
    if (void 0 !== e)
      for (var o in e)
        e.hasOwnProperty(o) && i.hasOwnProperty(o) && (i[o] = e[o]);
    if (!i.entries.length) return !1;
    var n,
      r,
      s,
      l,
      a,
      c,
      f,
      u = [],
      d = !0,
      m = { x: 0, y: 0 },
      p = { x: 0, y: 0, z: 0 },
      y = { x: 0, y: 0 },
      h = { sx: 0, cx: 0, sy: 0, cy: 0 },
      v = Math.PI / 180,
      g = "http://www.w3.org/2000/svg",
      x = 1;
    function w() {
      window.cancelAnimFrame(f),
        window.removeEventListener("resize", O),
        c && a.removeChild(c),
        a &&
          (t.removeChild(a), a.removeEventListener("mousemove", L), delete a);
    }
    function b() {
      (a = document.createElementNS(g, "svg")).addEventListener("mousemove", L),
        t.appendChild(a),
        i.bgDraw &&
          ((c = document.createElementNS(g, "rect")).setAttribute("x", 0),
          c.setAttribute("y", 0),
          c.setAttribute("fill", i.bgColor),
          a.appendChild(c)),
        (function () {
          for (var t = !1, e = 1, o = i.entries.length + 1; e < o; e++) {
            var n = Math.acos((2 * e) / o - 1),
              r = Math.sqrt(o * Math.PI) * n,
              s = Math.cos(r) * Math.sin(n),
              l = Math.sin(r) * Math.sin(n),
              a = Math.cos(n),
              c = S(e - 1, i.entries[e - 1], s, l, a);
            u.push(c), void 0 !== i.entries[e - 1].tooltip && (t = !0);
          }
          t && F();
        })(),
        A(),
        M(),
        window.addEventListener("resize", O);
    }
    function A() {
      var e =
          window.innerWidth ||
          document.documentElement.clientWidth ||
          document.body.clientWidth,
        o =
          window.innerHeight ||
          document.documentElement.clientHeight ||
          document.body.clientHeight,
        n = e,
        f = o;
      i.width.toString().indexOf("%") > 0 ||
      i.height.toString().indexOf("%") > 0
        ? ((n = Math.round((t.offsetWidth / 100) * parseInt(i.width))),
          (f = Math.round((n / 100) * parseInt(i.height))))
        : ((n = parseInt(i.width)), (f = parseInt(i.height))),
        e <= n && (n = e),
        o <= f && (f = o),
        (l = { x: n / 2, y: f / 2 }),
        (y.x = i.speed / l.x),
        (y.y = i.speed / l.y),
        (s =
          n >= f
            ? (f / 100) * parseInt(i.radius)
            : (n / 100) * parseInt(i.radius)) < 1 && (s = 1),
        (r = s / 2) < i.radiusMin && ((r = i.radiusMin), (s = 2 * r)),
        a.setAttribute("width", n),
        a.setAttribute("height", f),
        i.bgDraw && (c.setAttribute("width", n), c.setAttribute("height", f)),
        (function (t) {
          for (var e = 0, i = u.length; e < i; e++) C(u[e], t);
        })(r * x);
    }
    function C(t, e) {
      var i = t.vectorPosition.x - p.x,
        o = t.vectorPosition.y - p.y,
        n = t.vectorPosition.z - p.z,
        r = Math.sqrt(i * i + o * o + n * n);
      (t.vectorPosition.x /= r),
        (t.vectorPosition.y /= r),
        (t.vectorPosition.z /= r),
        (t.vectorPosition.x *= e),
        (t.vectorPosition.y *= e),
        (t.vectorPosition.z *= e);
    }
    function S(t, e, o, n, r) {
      var s = {};
      return (
        void 0 !== e.label
          ? ((s.element = document.createElementNS(g, "text")),
            s.element.setAttribute("x", 0),
            s.element.setAttribute("y", 0),
            void 0 !== e.fontColor
              ? s.element.setAttribute("fill", e.fontColor)
              : s.element.setAttribute("fill", i.fontColor),
            s.element.setAttribute("font-family", i.fontFamily),
            s.element.setAttribute(
              "font-size",
              e.fontSize ? e.fontSize : i.fontSize
            ),
            s.element.setAttribute("font-weight", i.fontWeight),
            s.element.setAttribute("font-style", i.fontStyle),
            s.element.setAttribute("font-stretch", i.fontStretch),
            s.element.setAttribute("text-anchor", "middle"),
            (s.element.textContent = i.fontToUpperCase
              ? e.label.toUpperCase()
              : e.label))
          : void 0 !== e.image &&
            ((s.element = document.createElementNS(g, "image")),
            s.element.setAttribute("x", 0),
            s.element.setAttribute("y", 0),
            s.element.setAttribute("width", e.width),
            s.element.setAttribute("height", e.height),
            s.element.setAttribute("id", "image_" + t),
            s.element.setAttributeNS(
              "http://www.w3.org/1999/xlink",
              "href",
              e.image
            ),
            (s.diffX = e.width / 2),
            (s.diffY = e.height / 2)),
        (s.link = document.createElementNS(g, "a")),
        s.link.setAttribute("target", e.target),
        !0 === i.hover &&
          (s.link.addEventListener("mouseover", E, !0),
          s.link.addEventListener("mouseout", T, !0)),
        i.click && s.link.addEventListener("click", D, !0),
        s.link.setAttribute("class", i.linkClass),
        s.link.appendChild(s.element),
        void 0 !== e.tooltip
          ? ((s.tooltip = !0),
            (s.tooltipLabel = i.tooltipFontToUpperCase
              ? e.tooltip.toUpperCase()
              : e.tooltip))
          : (s.tooltip = !1),
        (s.index = t),
        (s.mouseOver = !1),
        (s.vectorPosition = { x: o, y: n, z: r }),
        (s.vector2D = { x: 0, y: 0 }),
        a.appendChild(s.link),
        s
      );
    }
    function F() {
      ((n = document.createElement("div")).style.opacity = 0),
        (n.style.color = i.tooltipFontColor),
        (n.style.fontFamily = i.tooltipFontFamily),
        (n.style.fontSize = i.tooltipFontSize + "px"),
        (n.style.position = "absolute"),
        (n.style.top = t.clientHeight),
        (n.style.left = 0),
        (n.style.fontWeight = i.tooltipFontWeight),
        (n.style.fontStyle = i.tooltipFontStyle),
        (n.style.width = "200px"),
        (n.style.fontStretch = i.tooltipFontStretch),
        (n.style.textAnchor = i.tooltipTextAnchor),
        (n.textContent = ""),
        t.appendChild(n);
    }
    function P(t) {
      for (var e = 0, i = u.length; e < i; e++) {
        var o = u[e];
        if (
          o.element.getAttribute("x") === t.getAttribute("x") &&
          o.element.getAttribute("y") === t.getAttribute("y")
        )
          return o;
      }
    }
    var z = i.formatter;
    var k = i.onClick;
    function M() {
      (f = requestAnimFrame(M)),
        (function () {
          var t = y.x * m.x - i.speed,
            e = i.speed - y.y * m.y,
            o = t * v,
            n = e * v;
          (h.sx = Math.sin(o)),
            (h.cx = Math.cos(o)),
            (h.sy = Math.sin(n)),
            (h.cy = Math.cos(n));
          for (var a = 0, c = u.length; a < c; a++) {
            var f = u[a];
            if (d) {
              var p = f.vectorPosition.x,
                g = f.vectorPosition.y * h.sy + f.vectorPosition.z * h.cy;
              (f.vectorPosition.x = p * h.cx + g * h.sx),
                (f.vectorPosition.y =
                  f.vectorPosition.y * h.cy + f.vectorPosition.z * -h.sy),
                (f.vectorPosition.z = p * -h.sx + g * h.cx);
            }
            var w,
              b = i.fov / (i.fov + f.vectorPosition.z);
            (f.vector2D.x = f.vectorPosition.x * b + l.x),
              (f.vector2D.y = f.vectorPosition.y * b + l.y),
              f.diffX &&
                f.diffY &&
                ((f.vector2D.x -= f.diffX), (f.vector2D.y -= f.diffY)),
              f.element.setAttribute("x", f.vector2D.x),
              f.element.setAttribute("y", f.vector2D.y),
              d
                ? (w = (r - f.vectorPosition.z) / s) < i.opacityOut &&
                  (w = i.opacityOut)
                : ((w = parseFloat(f.element.getAttribute("opacity"))),
                  f.mouseOver
                    ? (w += (i.opacityOver - w) / i.opacitySpeed)
                    : (w += (i.opacityOut - w) / i.opacitySpeed)),
              f.element.setAttribute(
                "opacity",
                w * (1 - (x - 1) / (i.animatingRadiusLimit - 1))
              );
          }
          u = u.sort(function (t, e) {
            return e.vectorPosition.z - t.vectorPosition.z;
          });
        })();
    }
    function D(t) {
      var e = P(t.target);
      e &&
        (function (t, e) {
          k(t, e);
        })(e, t);
    }
    function E(e) {
      d = !1;
      var o = P(e.target);
      !(function (t) {
        for (var e = 0, i = u.length; e < i; e++) {
          var o = u[e];
          o.index === t.index ? (o.mouseOver = !0) : (o.mouseOver = !1);
        }
      })(o),
        o.tooltip &&
          (function (e, o) {
            if (e.tooltip) {
              n.style.width = "auto";
              var r = t.clientWidth,
                s = (t.clientHeight, n.clientWidth),
                l = n.clientHeight,
                a = 0;
              switch (((n.style.visibility = "visible"), i.tooltipPosition)) {
                case "top-left":
                  (n.style.top = o.offsetY - 15 + 0.1 - l + "px"),
                    (n.style.left = o.offsetX - s + "px");
                  break;
                case "top-right":
                  (n.style.top = o.offsetY - 15 + 0.1 - l + "px"),
                    (n.style.left = o.offsetX + "px");
                  break;
                case "bottom-left":
                  (n.style.top = o.offsetY - 15 + 0.1 + l + "px"),
                    (n.style.left = o.offsetX - s + "px");
                  break;
                case "bottom-right":
                  (n.style.top = o.offsetY - 15 + 0.1 + l + "px"),
                    (n.style.left = o.offsetX + "px");
                  break;
                default:
                  (s > r - o.offsetX || r - o.offsetX < s - o.offsetX) &&
                    (a = -s / 2),
                    (n.style.left = o.offsetX + a + 0.1 + -s / 2 + "px"),
                    (n.style.top = o.offsetY - 15 + 0.1 - l + "px");
              }
              (n.style.position = "absolute"),
                (n.style.borderRadius = "5px"),
                (n.style.padding = "5px 8px"),
                (n.style.zIndex = 999),
                (n.style.opacity = 0.9),
                (n.style.background = "rgb(3,6,18)"),
                (n.style.transition = "all ease .1s"),
                (n.innerHTML = z(e));
            }
          })(o, e);
    }
    function T(t) {
      d = !0;
      var e = P(t.target);
      e.tooltip && ((n.style.opacity = 0), (n.style.visibility = "hidden"));
    }
    function L(t) {
      m = (function (t, e) {
        var i = t.getBoundingClientRect();
        return { x: e.clientX - i.left, y: e.clientY - i.top };
      })(a, t);
    }
    function O(t) {
      A();
    }
    function X(t) {
      (x = Math.min(Math.max(t, 1), i.animatingRadiusLimit)), A();
    }
    (window.requestAnimFrame =
      window.requestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      function (t) {
        return window.setTimeout(t, 1e3 / 60);
      }),
      (window.cancelAnimFrame = window.requestAnimationFrame
        ? window.cancelAnimationFrame
        : window.webkitRequestAnimationFrame
        ? window.webkitCancelAnimationFrame
        : window.mozRequestAnimationFrame
        ? window.mozCancelAnimationFrame
        : window.clearTimeout);
    var q = !1,
      R = !1,
      W = !1;
    function I() {
      (W = x < i.animatingRadiusLimit)
        ? (X(x + i.animatingSpeed), requestAnimFrame(I))
        : "function" == typeof q && (q(), (q = !1));
    }
    function Y() {
      (W = x > 1)
        ? (X(x - i.animatingSpeed), requestAnimFrame(Y))
        : "function" == typeof R && (R(), (R = !1));
    }
    try {
      b();
    } catch (t) {}
    (this.destroy = w),
      (this.animOut = function (t) {
        W || ((x = 1), (q = t), I());
      }),
      (this.animIn = function (t) {
        W || ((x = i.animatingRadiusLimit), (R = t), Y());
      }),
      (this.setEntries = function (t) {
        try {
          w(), (i.entries = t), b();
        } catch (t) {}
      });
  }
  (window.SVG3DTagCloud = t),
    "undefined" != typeof module &&
      "object" == typeof exports &&
      (module.exports = t);
})(),
  "undefined" != typeof jQuery &&
    (function (t) {
      t.fn.svg3DTagCloud = function (e) {
        var i = arguments;
        return this.each(function () {
          if (t.data(this, "plugin_SVG3DTagCloud")) {
            var o = t.data(this, "plugin_SVG3DTagCloud");
            o[e]
              ? o[e].apply(this, Array.prototype.slice.call(i, 1))
              : t.error(
                  "Method " + e + " does not exist on jQuery.svg3DTagCloud"
                );
          } else t.data(this, "plugin_SVG3DTagCloud", new SVG3DTagCloud(this, e));
        });
      };
    })(jQuery);